Index: sqlite3/ext/fts5/fts5_hash.c
==================================================================
--- sqlite3/ext/fts5/fts5_hash.c
+++ sqlite3/ext/fts5/fts5_hash.c
@@ -454,11 +454,13 @@
   memset(ap, 0, sizeof(Fts5HashEntry*) * nMergeSlot);
 
   for(iSlot=0; iSlot<pHash->nSlot; iSlot++){
     Fts5HashEntry *pIter;
     for(pIter=pHash->aSlot[iSlot]; pIter; pIter=pIter->pHashNext){
-      if( pTerm==0 || 0==memcmp(fts5EntryKey(pIter), pTerm, nTerm) ){
+      if( pTerm==0 
+       || (pIter->nKey+1>=nTerm && 0==memcmp(fts5EntryKey(pIter), pTerm, nTerm))
+      ){
         Fts5HashEntry *pEntry = pIter;
         pEntry->pScanNext = 0;
         for(i=0; ap[i]; i++){
           pEntry = fts5HashEntryMerge(pEntry, ap[i]);
           ap[i] = 0;

Index: sqlite3/ext/fts5/test/fts5aa.test
==================================================================
--- sqlite3/ext/fts5/test/fts5aa.test
+++ sqlite3/ext/fts5/test/fts5aa.test
@@ -619,10 +619,23 @@
   INSERT INTO t12(t12) VALUES('integrity-check');
 }
 do_execsql_test 24.3 {
     SELECT * FROM t12('aaaa');
 } {aaaa}
+
+#-------------------------------------------------------------------------
+do_execsql_test 25.0 {
+  CREATE VIRTUAL TABLE t13 USING fts5(x, detail=%DETAIL%);
+}
+do_execsql_test 25.1 {
+  BEGIN;
+  INSERT INTO t13 VALUES('AAAA');
+SELECT * FROM t13('BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB*');
+
+  END;
+}
+
 
 }
 
 expand_all_sql db
 finish_test

